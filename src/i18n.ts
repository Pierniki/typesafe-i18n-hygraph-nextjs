// Import hygraph locale type generated by codegen
import { Locale as HygraphLocaleEnum } from "./gql/graphql";

// re-export for convenience
// mine looks like that:
// enum HygraphLocaleEnum {
//   En = 'en',
//   PlPl = 'pl_PL'
// }
export { HygraphLocaleEnum };

// transform enum type into string union
// type HygraphLocale = "en" | "pl_PL"
export type HygraphLocale = `${HygraphLocaleEnum}`;

// hygraph locales are separated by "_"
// this utility type allows us to use standard notation while keeping the types tight
// type Locale = "en" | "pl-PL"
export type Locale = Replace<HygraphLocale, "_", "-">;

type Replace<
  T extends string,
  S extends string,
  D extends string,
  A extends string = ""
> = T extends `${infer L}${S}${infer R}`
  ? Replace<R, S, D, `${A}${L}${D}`>
  : `${A}${T}`;

// mapping locales into standard format
const locales = Object.values(HygraphLocaleEnum).map(
  (hygraphLocale) => hygraphLocale.replace("_", "-") as Locale
);

// having :Locale ensures we can only choose between "en" and "pl-PL"
const defaultLocale: Locale = "en";

export const i18n = {
  locales,
  defaultLocale,
};
